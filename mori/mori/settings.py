"""
Django settings for mori project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from datetime import timedelta
from dotenv import load_dotenv
import faiss

env_path = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), '.env')
load_dotenv(dotenv_path=env_path)
# load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

faiss.omp_set_num_threads(1)
os.environ["KMP_DUPLICATE_LIB_OK"] = "TRUE"

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
key_django = os.getenv("KEY_DJANGO")
SECRET_KEY = "key_django"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    #auth allauth
    "allauth",  
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google", 
    'django.contrib.sites', 
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "morisite",
    "corsheaders",
    "drf_yasg",
    "knox",
    # "django.contrib.sites", 
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "allauth.account.middleware.AccountMiddleware", # all auth 
]

ROOT_URLCONF = "mori.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, 'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "mori.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# sqlite3
# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }

# postgresql with docker 
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.getenv("POSTGRES_DB"),
        "USER": os.getenv("POSTGRES_USER"),
        "PASSWORD": os.getenv("POSTGRES_PASSWORD"),
        "HOST": os.getenv("POSTGRES_HOST"),
        "PORT": os.getenv("POSTGRES_PORT"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    # {
    #     "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    # },
    # {
    #     "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    # },
    # {
    #     "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    # },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

# TIME_ZONE = "UTC"

USE_I18N = True
TIME_ZONE = 'Asia/Ho_Chi_Minh'
USE_TZ = True
# USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

REST_KNOX = {
  'TOKEN_TTL': timedelta(hours=24),  
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'knox.auth.TokenAuthentication',
    ),
    'DATETIME_FORMAT': "%Y-%m-%d %H:%M:%S",
    'TIME_ZONE': 'Asia/Ho_Chi_Minh'
}

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_METHODS = (  
                      "DELETE", 
                      "GET",
                      "OPTIONS",
                      "PATCH",  
                      "POST",
                      "PUT")

CORS_ALLOW_HEADERS = (
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with"
    
)
DEBUG = True

APPEND_SLASH = False

MEDIA_URL = '/store/' 
MEDIA_ROOT = os.path.join(BASE_DIR, 'store')
 
SWAGGER_SETTINGS = {
    'DEFAULT_AUTO_SCHEMA_CLASS': 'drf_yasg.inspectors.SwaggerAutoSchema'
}

USE_AUTO_RELOAD = False

SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend", 
]
client_id_app_google = os.getenv("GOOGLE_CLIENT_APPLICATION")
client_secret_app_google = os.getenv("SECRET_GOOGLE_CLIENT_APPLICATION")
# Cấu hình Google OAuth
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': client_id_app_google,
            'secret': client_secret_app_google,
        },
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'offline',
            'prompt': 'select_account'
        },
    }
}

email_host_noti = os.getenv("EMAIL_HOST_USER")  
email_key_host_applicatoin = os.getenv("EMAIL_HOST_KEY_APPLICATON")

SOCIALACCOUNT_ADAPTER = "morisite.adapters.CustomSocialAccountAdapter"
# Chỉ định mô hình User tùy chỉnh
AUTH_USER_MODEL = 'morisite.User'
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_LOGIN_METHODS = {'email'}
ACCOUNT_LOGIN_METHODS = {"email"} 
ACCOUNT_EMAIL_VERIFICATION = "optional"
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = True
ACCOUNT_SIGNUP_REDIRECT_URL = "/page/home" 
ACCOUNT_LOGOUT_REDIRECT_URL = "/page/login" 
ACCOUNT_LOGOUT_ON_GET = True
ACCOUNT_LOGIN_REDIRECTS = True

LOGIN_REDIRECT_URL = "/page/home"
LOGIN_URL = "/page/login"

SOCIALACCOUNT_LOGIN_ON_GET = True 
APPEND_SLASH = True

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = email_host_noti
EMAIL_HOST_PASSWORD = email_key_host_applicatoin
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

SOCIALACCOUNT_AUTO_SIGNUP = True
ACCOUNT_SIGNUP_AUTO_LINK = True

# send_mail(
#     subject='Test Email từ Django',
#     message='Đây là email test từ Django SMTP Gmail Mori super search image.',
#     from_email='xndien2004@gmail.com',  
#     recipient_list=['taochoi453@gmail.com']  
# )